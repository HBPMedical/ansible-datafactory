---
# create Data Factory postgreSQL container and databases
- name: create postgresql container
  docker_container:
    name: '{{ postgresql_container }}'
    image: 'postgres:9.6'
    env:
      POSTGRES_USER: "{{ postgresql_user }}"
      POSTGRES_PASSWORD: "{{ postgresql_pwd }}"
    ports:
      '{{ postgresql_port }}:5432'

- name: wait for postgres container to be fully operational
  wait_for:
    timeout: 120


- name: create mipmap database 
  shell:
    cmd: docker exec -it {{ postgresql_container }} psql -U {{ postgresql_user }} -d postgres -c "CREATE DATABASE {{ mipmap_db }};"
    
  
- name: setup i2b2 capture db
  docker_container:
    name: 'i2b2-setup-capture'
    recreate: true
    image: 'hbpmip/i2b2-setup:1.5.2'
    command: 'upgrade head'
    env:
      DB_URL: 'postgresql://{{ postgresql_user }}:{{ postgresql_pwd }}@postgres_host:{{ postgresql_port }}/{{ capture_db }}'
    links: 
      - '{{ postgresql_container }}:postgres_host'

- name: setup i2b2 harmonize db
  docker_container:
    name: 'i2b2-setup-harmonized'
    recreate: true
    image: 'hbpmip/i2b2-setup:1.5.2'
    command: 'upgrade head'
    env:
      DB_URL: 'postgresql://{{ postgresql_user }}:{{ postgresql_pwd }}@postgres_host:{{ postgresql_port }}/{{ harmonize_db }}'
    links: 
      - '{{ postgresql_container }}:postgres_host'
